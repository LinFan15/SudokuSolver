namespace SudokuSolver
{
    /// <summary>
    /// This type holds the value and whether or not the value is locked, for a cell in the sudoku,
    /// as well as the indexes of the block, row and column in which the cell is located.
    /// </summary>
    class SudokuEntry
    {
        public bool Locked { get; private set; }
        public int Value { get; private set; }
        public int BlockIndex { get; private set; }
        public int RowIndex { get; private set; }
        public int ColumnIndex { get; private set; }

        /// <summary>
        /// Constructs a new instance of the SudokuEntry class, given the necessary arguments.
        /// </summary>
        /// <param name="value">The 'value' is the same as the number that appears in the sudoku on the position specified by rowIndex, columnIndex and blockIndex.</param>
        /// <param name="blockIndex">The zero-based index of the block in which the value represented by this SudokuEntry is located, counting from left to right.</param>
        /// <param name="rowIndex">The zero-based index of the row in which the value represented by this SudokuEntry is located, counting from top to bottom.</param>
        /// <param name="columnIndex">The zero-based index of the column in which the value represented by this SudokuEntry is located, counting from left to right.</param>
        /// <param name="locked">A SudokuEntry is 'locked', if the value it represents has been entered by the user, rather than generated by the Sudoku.Solve() function.</param>
        public SudokuEntry(int value, int blockIndex, int rowIndex, int columnIndex, bool locked)
        {
            Locked = locked;
            Value = value;
            BlockIndex = blockIndex;
            RowIndex = rowIndex;
            ColumnIndex = columnIndex;
        }
    }
}